NAME
	xor - XOR files

SYNOPSIS
	xor [KEYFILE]

DESCRIPTION
	Performs XOR on data provided by stdin with a file KEYFILE, and prints the
	resulting data to stdout. The content of KEYFILE is repeated and/or cropped
	as necessary to equal the data's length.
	If KEYFILE is omitted, xor performs XOR on the data with all bits set to 1
	(swap all the bits).

EXAMPLE
	xor KEYFILE < my_porn_collection.tgz > my_scrambled_porn_collection_muahaha

SECURITY
	XOR is not a replacement for security/encryption systems like RSA. The
	keyfile's content should have at least the length of the provided data and
	be as random as possible. There are additional security concerns, such as
	the secure storage of the keyfile.

	To generate secure keyfiles, it's recommended to use /dev/urandom:

	$ xor /dev/urandom < data > scrambled_data

	In order to retrieve the key file, XOR the resulting file with the original
	data, and the resulting output is the key generated by /dev/urandom:

	$ xor scrambled_data < data > keyfile

EXIT STATUS
	If the wrong number of arguments (more than 1) is given, or the provided
	file cannot be read (does not exist, or is empty, or no permission), xor
	shall return EXIT_FAILURE as defined in the C standard library; otherwise
	xor shall return 0.
