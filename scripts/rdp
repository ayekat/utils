#!/usr/bin/env sh

# Simple frontend to xfreerdp - takes a hostname and reads the corresponding
# configuration file from $HOME/.local/etc/rdp/

# Written by ayekat on a cool monday morning in may 2016

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
CONFDIR="$XDG_CONFIG_HOME/freerdp/hosts"
APPNAME="$(basename "$0")"
EDITOR="${EDITOR:-/usr/bin/nano}"

E_SUCCESS=0
E_FAIL=1
E_USER=2
E_PERM=3
TRUE=1
FALSE=0

usage() { echo "Usage: $APPNAME [OPTIONS] HOST"; }

help()
{
	echo "$APPNAME: Establish an RDP connection to a host"
	echo
	usage
	echo
	cat <<- EOF
	Options:
	  -e, --edit        Launch editor for the host config file, then exit
	  -h, --help        Display this message and exit
	  -l, --list        List available remote hosts and exit
	  -o, --option OPT  Pass option OPT to xfreerdp (can be used multiple times)

	The host configuration is an xfreerdp configuration file located in $CONFDIR
	See xfreerdp(1) for more information.
	EOF
}

die()
{
	retval_str=$1
	retval=$(eval "echo \$$retval_str")
	shift
	format="$1"
	if [ -n "$format" ]; then
		shift
		printf "\033[31m$retval_str\033[0m $format\n" "$@" >&2
	fi
	if [ $retval -eq $E_USER ]; then
		usage >&2
	fi
	exit $retval
}

list()
{
	remotes="$(find "$CONFDIR" -name '*.rdp' -type f | sort)"
	for r in $remotes; do
		basename "$r" .rdp
	done
}

# Read arguments:
options=''
edit=$FALSE
while [ $# -gt 0 ]; do
	case "$1" in
		-e|--edit) edit=$TRUE ;;
		-h|--help) help; exit 0 ;;
		-l|--list) list; exit 0 ;;
		-o|--option) shift; options="$options $1" ;;
		-*) die E_USER "Unknown option: -$1" ;;
		*) break ;;
	esac
	shift
done
host="$1"
test -n "$host" || die E_USER "Please specify a host"

# Check environment:
test -d "$CONFDIR" || die E_FAIL "$CONFDIR: No such directory"
test -r "$CONFDIR" || die E_PERM "$CONFDIR: Permission denied"
hostfile="$CONFDIR/${host}.rdp"
test -e "$hostfile" || die E_FAIL "$hostfile: No such file"

if [ $edit -eq $TRUE ]; then
	# Edit RDP connection:
	$EDITOR "$hostfile"
else
	# Open RDP connection:
	xfreerdp $(cat "$hostfile") $options
fi
